name: feature-pipeline-30min

on:
  schedule:
    - cron: '*/30 * * * *' # Runs every 30 minutes

  workflow_dispatch:

env:
  PYTHON_VERSION: 3.11
  POETRY_VERSION: 1.8.3
  POETRY_URL: https://install.python-poetry.org

jobs:
  feature_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: curl -sSL ${{ env.POETRY_URL }} | python3 - --version ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: poetry install

      - name: Verify directory contents
        run: ls -la /home/runner/work/prediction_model/prediction_model/src

      - name: Run feature pipeline
        run: poetry run python src/taxi_demand_predictor/feature_pipeline.py

      - name: Make features
        env: 
          HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: make features

